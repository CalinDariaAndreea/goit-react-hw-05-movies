{"version":3,"file":"static/js/779.9d090420.chunk.js","mappings":"8RAEaA,EAAUC,EAAAA,GAAAA,IAAH,qHAOPC,EAAeD,EAAAA,GAAAA,GAAH,wFAMZE,EAAaF,EAAAA,GAAAA,GAAH,yHAQVG,EAAiBH,EAAAA,GAAAA,GAAH,sFAKdI,EAASJ,EAAAA,GAAAA,GAAH,yFAMNK,EAASL,EAAAA,GAAAA,EAAH,6CAINM,EAAgBN,EAAAA,GAAAA,EAAH,mN,SCe1B,EAxCgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBP,GAF3B,gBAETQ,EAFS,EAETA,QACRJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACN,KAGF,UAACR,EAAD,YACE,SAACE,EAAD,sBAGCS,EAAQQ,QACP,SAAChB,EAAD,CAAYiB,UAAU,oBAAtB,SACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,UAAClB,EAAD,CAAgBgB,UAAU,cAA1B,WACE,UAACf,EAAD,sBAAiBiB,EAAOC,WACxB,SAACjB,EAAD,UAASgB,EAAOE,YAF2BF,EAAOG,GADnC,OAQrB,SAAClB,EAAD,8DAMP,C,mMClDKmB,EAAU,6BACVC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACgBC,EADhB,iCACgDK,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMzB,GAAN,yFACLqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACClB,EADD,oBACoBmB,EADpB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAc,mCAAG,WAAM1B,GAAN,yFACLqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACClB,EADD,4BAC4BmB,EAD5B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdf,EAAiB,mCAAG,WAAMP,GAAN,yFACRqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACClB,EADD,6BAC6BmB,EAD7B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin-top: 30px;\r\n  padding-right: 40px;\r\n  padding-left: 40px;\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nexport const ReviewHeader = styled.h3`\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ReviewList = styled.ul`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 40px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const ReviewListItem = styled.li`\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #d3d3d3;\r\n`;\r\n\r\nexport const Author = styled.h4`\r\n  margin-bottom: 10px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Review = styled.p`\r\n  line-height: 1.3;\r\n`;\r\n\r\nexport const NoReviewsText = styled.p`\r\n  margin: 30px auto 0 auto;\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n  max-width: 500px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\r\nimport { fetchMovieReviews } from '../../services/api';\r\nimport {\r\n  Author,\r\n  NoReviewsText,\r\n  Review,\r\n  ReviewHeader,\r\n  ReviewList,\r\n  ReviewListItem,\r\n  Wrapper,\r\n} from './Reviews.styled'; // додаємо стилі\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams(); // додаємо доступ до параметрів поточного URL\r\n  const [reviews, setReviews] = useState([]); // додаємо стейт для відгуків\r\n\r\n  // додаємо запит на відгуки\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const { results } = await fetchMovieReviews(movieId);\r\n        setReviews(results);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ReviewHeader>Reviews</ReviewHeader>\r\n\r\n      {/* додаємо перевірку на наявність відгуків */}\r\n      {reviews.length ? (\r\n        <ReviewList className=\"reviews-container\">\r\n          {reviews.map(review => (\r\n            <ReviewListItem className=\"review-card\" key={review.id}>\r\n              <Author>Author: {review.author}</Author>\r\n              <Review>{review.content}</Review>\r\n            </ReviewListItem>\r\n          ))}\r\n        </ReviewList>\r\n      ) : (\r\n        <NoReviewsText>\r\n          We don't have any reviews for this movie yet.\r\n        </NoReviewsText>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Reviews;\r\n\r\n// Діма Берестень\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://api.themoviedb.org';\r\nconst API_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca'; // персональний ключ\r\n\r\nexport const fetchTrendMovies = async () => {\r\n  const { data } = await axios.get(\r\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieByName = async query => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieById = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieCast = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieReviews = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\n  return data;\r\n};\r\n"],"names":["Wrapper","styled","ReviewHeader","ReviewList","ReviewListItem","Author","Review","NoReviewsText","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","fetchMovieReviews","results","console","log","length","className","map","review","author","content","id","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieCast"],"sourceRoot":""}