{"version":3,"file":"static/js/172.2c043559.chunk.js","mappings":"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","sources":["components/SharedLayout/LoadingDots.jsx","components/SharedLayout/SharedLayout.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDelails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { LoadingDots, Dot } from './SharedLayout.styled'; // додаємо стилі\r\n\r\n// додаємо індикатор завантаження\r\nexport const LoadingIndicator = () => {\r\n  return (\r\n\r\n    // додаємо анімацію для індикатора завантаження\r\n    <LoadingDots>\r\n      <Dot delay=\"0s\" />\r\n      <Dot delay=\".2s\" />\r\n      <Dot delay=\".4s\" />\r\n    </LoadingDots>\r\n  );\r\n};\r\n\r\n// Діма Берестень\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const StyledHeader = styled.header`\r\n  padding: 20px 30px;\r\n  text-align: center;\r\n  box-shadow: 0px 4px 4px #d3d3d3;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n  display: inline-block;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  transition: color 0.2s ease-in-out;\r\n  color: #000000;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 40px;\r\n  }\r\n\r\n  &.active,\r\n  &:hover,\r\n  &:focus {\r\n    color: #1c85ff;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst bounce = keyframes`\r\n  0%, 80%, 100% {\r\n    transform: scale(0);\r\n  }\r\n  40% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const LoadingDots = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n  border-radius: 50%;\r\n  background-color: #1c85ff;\r\n  animation: ${bounce} 1s infinite ease-in-out;\r\n  animation-delay: ${({ delay }) => delay};\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const MovieCardContainer = styled.div`\r\n  display: flex;\r\n  gap: 40px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  height: 600px;\r\n  width: 400px;\r\n`;\r\n\r\nexport const MovieInfo = styled.div`\r\n  padding-top: 20px;\r\n  max-width: 1100px;\r\n`;\r\n\r\nexport const MovieName = styled.h2`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const MovieInfoText = styled.p`\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const MovieInfoTextBold = styled.span`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const MoreInfoWrapper = styled.div`\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  border-top: 1px solid #d3d3d3;\r\n  border-bottom: 1px solid #d3d3d3;\r\n`;\r\n\r\nexport const MoreInfoHeader = styled.h3`\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  gap: 20px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: 16px;\r\n  margin-right: 5px;\r\n  padding: 5px 15px;\r\n  border: 1px solid #0d57aa;\r\n  border-radius: 6px;\r\n  background-color: #b5d1f2;\r\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  color: #0d57aa;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0d57aa;\r\n    color: #ffffff;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n","import { useLocation } from 'react-router-dom'; // доступ до параметрів поточного URL\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Img,\r\n  List,\r\n  ListItem,\r\n  MoreInfoHeader,\r\n  MoreInfoWrapper,\r\n  MovieCardContainer,\r\n  MovieInfo,\r\n  MovieInfoText,\r\n  MovieInfoTextBold,\r\n  MovieName,\r\n  StyledLink,\r\n} from './MovieCard.styled'; // додаємо стилі\r\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots'; // додаємо індикатор завантаження\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { title, release_date, poster_path, vote_average, overview, genres } =\r\n  movie;\r\n  const location = useLocation(); // додаємо доступ до параметрів поточного URL\r\n  const releaseDate = new Date(release_date);\r\n\r\n  // перевіряємо чи дата валідна, якщо ні, то виводимо Unknown\r\n  const releaseYear = isNaN(releaseDate)\r\n    ? 'Unknown'\r\n    : releaseDate.getFullYear();\r\n\r\n  // додаємо перевірку на наявність постера\r\n  const posterUrl = poster_path\r\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\r\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\r\n\r\n  // додаємо перевірку на наявність рейтингу\r\n  const userScore = vote_average\r\n    ? `${(vote_average * 10).toFixed(0)}%`\r\n    : 'Not rated yet';\r\n\r\n  // додаємо перевірку на наявність заголовку\r\n  if (!title) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MovieCardContainer>\r\n        <Img src={posterUrl} alt={`${title} poster`} />\r\n\r\n        <MovieInfo>\r\n          <MovieName>\r\n            {title ?? 'Unknown'} ({releaseYear})\r\n          </MovieName>\r\n          <MovieInfoText>User Score: {userScore}</MovieInfoText>\r\n          <MovieInfoText>\r\n            <MovieInfoTextBold>Overview:</MovieInfoTextBold> {overview}\r\n          </MovieInfoText>\r\n\r\n          {/* додаємо перевірку на наявність жанрів */}\r\n          {genres && genres.length > 0 && (\r\n            <MovieInfoText>\r\n              <MovieInfoTextBold>Genres:</MovieInfoTextBold>\r\n              {genres.map(genre => genre.name).join(', ')}\r\n            </MovieInfoText>\r\n          )}\r\n        </MovieInfo>\r\n\r\n      </MovieCardContainer>\r\n\r\n      <MoreInfoWrapper>\r\n        <MoreInfoHeader>Additional information</MoreInfoHeader>\r\n\r\n        <List>\r\n          <ListItem>\r\n            <StyledLink\r\n              to=\"cast\"\r\n              state={{ from: location?.state?.from ?? '/' }} // додаємо параметр from для повернення на попередню сторінку\r\n            >\r\n              Cast\r\n            </StyledLink>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <StyledLink\r\n              to=\"reviews\"\r\n              state={{ from: location?.state?.from ?? '/' }}\r\n            >\r\n              Reviews\r\n            </StyledLink>\r\n          </ListItem>\r\n        </List>\r\n\r\n      </MoreInfoWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\n// додаємо перевірку на типи пропсів\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    release_date: PropTypes.string.isRequired,\r\n    poster_path: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number,\r\n    overview: PropTypes.string,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({ name: PropTypes.string.isRequired })\r\n    ),\r\n  }).isRequired,\r\n};\r\n\r\nexport default MovieCard;\r\n\r\n// Діма Берестень\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px 40px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  border: 1px solid #0d57aa;\r\n  border-radius: 6px;\r\n  background-color: #b5d1f2;\r\n  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0d57aa;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n","import { Suspense } from 'react'; // додаємо бібліотеку для lazy\r\nimport { useEffect, useState } from 'react'; // додаємо бібліотеку для хуків\r\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom'; // додаємо бібліотеку для роботи з адресою\r\nimport { BsArrowLeftShort } from 'react-icons/bs'; // додаємо бібліотеку для іконки\r\nimport { fetchMovieById } from '../services/api'; // додаємо запит на фільм\r\nimport MovieCard from '../components/MovieCard/MovieCard';\r\nimport { Button, Container } from './MovieDelails.styled';\r\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\r\n\r\nconst MovieDelails = () => {\r\n  const { movieId } = useParams();\r\n  const location = useLocation();\r\n  const [selectedMovie, setSelectedMovie] = useState({});\r\n\r\n  // додаємо запит на фільм\r\n  useEffect(() => {\r\n    const fetchSelectedMovie = async movieId => {\r\n      try {\r\n        const movieData = await fetchMovieById(movieId);\r\n        setSelectedMovie(movieData);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchSelectedMovie(movieId);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <main>\r\n      <Container>\r\n\r\n        {/* додаємо кнопку для повернення на попередню сторінку */}\r\n        <Link to={location?.state?.from ?? '/'}>\r\n          <Button type=\"button\">\r\n            <BsArrowLeftShort\r\n              style={{ width: '25px', height: '25px', display: 'inline-block' }}\r\n            />\r\n            Go back\r\n          </Button>\r\n        </Link>\r\n\r\n        <MovieCard movie={selectedMovie} /> {/* додаємо компонент для відображення фільму */}\r\n\r\n        {/* додаємо відкладений рендеринг дочірніх компонентів */}\r\n        <Suspense fallback={<LoadingIndicator />}>\r\n          <Outlet />\r\n        </Suspense>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MovieDelails;\r\n\r\n// Діма Берестень\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://api.themoviedb.org';\r\nconst API_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca'; // персональний ключ\r\n\r\nexport const fetchTrendMovies = async () => {\r\n  const { data } = await axios.get(\r\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieByName = async query => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieById = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieCast = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieReviews = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\n  return data;\r\n};\r\n"],"names":["LoadingIndicator","delay","StyledHeader","styled","StyledNavLink","NavLink","bounce","keyframes","LoadingDots","Dot","MovieCardContainer","Img","MovieInfo","MovieName","MovieInfoText","MovieInfoTextBold","MoreInfoWrapper","MoreInfoHeader","List","ListItem","StyledLink","Link","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","Container","Button","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","fetchMovieById","movieData","console","log","type","style","width","height","display","Suspense","fallback","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}