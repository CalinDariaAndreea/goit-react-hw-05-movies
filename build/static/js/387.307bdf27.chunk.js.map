{"version":3,"file":"static/js/387.307bdf27.chunk.js","mappings":"8RAEaA,EAAUC,EAAAA,GAAAA,IAAH,qHAOPC,EAAaD,EAAAA,GAAAA,GAAH,wFAMVE,EAAWF,EAAAA,GAAAA,GAAH,yHAQRG,EAAeH,EAAAA,GAAAA,GAAH,2GAMZI,EAAWJ,EAAAA,GAAAA,IAAH,kEAKRK,EAAWL,EAAAA,GAAAA,GAAH,gDAIRM,EAAaN,EAAAA,GAAAA,EAAH,mN,SCgCvB,EAzDa,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAeP,GAFxB,gBAENG,EAFM,EAENA,KACRC,EAAQD,GAHM,gDAKdK,QAAQC,IAAR,MALc,yDAAH,qDASfH,GACD,GAAE,CAACN,KAGF,UAACR,EAAD,YACE,SAACE,EAAD,mBADF,IAIGS,EAAKO,QACJ,SAACf,EAAD,UACGQ,EAAKQ,KAAI,SAAAC,GAAK,OACb,UAAChB,EAAD,CAAciB,UAAU,YAAxB,UAGGD,EAAME,cACL,gBACEC,IAAG,yCAAoCH,EAAME,cAC7CE,IAAG,UAAKJ,EAAMK,KAAX,eAGL,gBACEF,IAAG,oDACHC,IAAG,UAAKJ,EAAMK,KAAX,eAKP,UAACpB,EAAD,YACE,SAACC,EAAD,UAAWc,EAAMK,QACjB,uCAAeL,EAAMM,kBAlBgBN,EAAMO,GADlC,OAyBjB,SAACpB,EAAD,kEAMP,C,mMClEKqB,EAAU,6BACVC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACgBC,EADhB,iCACgDK,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAM3B,GAAN,yFACLuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCpB,EADD,oBACoBqB,EADpB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdjB,EAAc,mCAAG,WAAMP,GAAN,yFACLuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCpB,EADD,4BAC4BqB,EAD5B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAiB,mCAAG,WAAM5B,GAAN,yFACRuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCpB,EADD,6BAC6BqB,EAD7B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin-top: 30px;\r\n  padding-right: 80px;\r\n  padding-left: 80px;\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nexport const CastHeader = styled.h3`\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CastList = styled.ul`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 40px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const CastListItem = styled.li`\r\n  width: calc((100% - 4 * 40px) / 5);\r\n  height: 400px;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nexport const CastInfo = styled.div`\r\n  margin-top: 20px;\r\n  max-width: 220px;\r\n`;\r\n\r\nexport const CastName = styled.h3`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const NoCastText = styled.p`\r\n  margin: 30px auto 0 auto;\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n  max-width: 500px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\r\nimport { fetchMovieCast } from '../../services/api'; // додаємо запит\r\nimport {\r\n  CastHeader,\r\n  CastInfo,\r\n  CastList,\r\n  CastListItem,\r\n  CastName,\r\n  NoCastText,\r\n  Wrapper,\r\n} from './Cast.styled'; // додаємо стилі\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams(); // додаємо параметр movieId\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCast = async () => {\r\n      try {\r\n        const { cast } = await fetchMovieCast(movieId);\r\n        setCast(cast);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchCast();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CastHeader>Cast</CastHeader> {/* додаємо заголовок */}\r\n\r\n      {/* додаємо перевірку на наявність акторів */}\r\n      {cast.length ? (\r\n        <CastList>\r\n          {cast.map(actor => (\r\n            <CastListItem className=\"cast-card\" key={actor.id}>\r\n\r\n              {/* додаємо перевірку на наявність фото */}\r\n              {actor.profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\r\n                  alt={`${actor.name} profile`}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\r\n                  alt={`${actor.name} profile`}\r\n                />\r\n              )}\r\n\r\n              {/* додаємо інформацію про актора */}\r\n              <CastInfo>\r\n                <CastName>{actor.name}</CastName>\r\n                <p>Character: {actor.character}</p>\r\n              </CastInfo>\r\n            </CastListItem>\r\n          ))}\r\n        </CastList>\r\n      ) : (\r\n        <NoCastText>\r\n          We don't have any information about the cast yet.\r\n        </NoCastText>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n\r\n// Діма Берестень\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://api.themoviedb.org';\r\nconst API_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca'; // персональний ключ\r\n\r\nexport const fetchTrendMovies = async () => {\r\n  const { data } = await axios.get(\r\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieByName = async query => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieById = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieCast = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieReviews = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\n  return data;\r\n};\r\n"],"names":["Wrapper","styled","CastHeader","CastList","CastListItem","CastInfo","CastName","NoCastText","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","fetchMovieCast","console","log","length","map","actor","className","profile_path","src","alt","name","character","id","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}