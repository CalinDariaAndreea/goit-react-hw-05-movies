{"version":3,"file":"static/js/891.19dfd80c.chunk.js","mappings":"mTAGaA,EAAgBC,EAAAA,GAAAA,QAAH,uEAKbC,EAAeD,EAAAA,GAAAA,GAAH,2JASZE,EAAOF,EAAAA,GAAAA,GAAH,gEAKJG,EAAWH,EAAAA,GAAAA,GAAH,8EAMRI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,iO,8ECzBVM,EAAmB,WAC9B,OAGE,UAAC,KAAD,YACE,SAAC,KAAD,CAAKC,MAAM,QACX,SAAC,KAAD,CAAKA,MAAM,SACX,SAAC,KAAD,CAAKA,MAAM,UAGhB,C,2KCVYC,EAAeR,EAAAA,GAAAA,OAAH,0GAMZS,GAAgBT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,0UAoBpBW,GAASC,EAAAA,EAAAA,IAAH,kHASCC,EAAcb,EAAAA,GAAAA,IAAH,gHAOXc,EAAMd,EAAAA,GAAAA,IAAH,kOAODW,GACM,qBAAGJ,KAAH,G,sJC1BrB,EAlBkB,SAAC,GAAwB,IAAtBQ,EAAqB,EAArBA,eACnB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,8BAEA,SAAC,KAAD,UACGA,EAAeC,KAAI,SAAAC,GAAa,OAC/B,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,kBAAaD,EAAcE,IAAzC,SACGF,EAAcG,SAFJH,EAAcE,GADE,QAUxC,E,UCmBD,EAvCa,WACX,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAON,EAAP,KAAuBO,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBF,GAAS,GACTF,GAAa,GAHW,UAIEK,EAAAA,EAAAA,MAJF,gBAIhBC,EAJgB,EAIhBA,QACRR,EAAkBQ,GALM,kDAOxBJ,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAazBI,GACD,GAAE,KAGD,8BAEGL,GACC,SAAC,IAAD,IACEE,GACF,mGAIA,SAAC,EAAD,CAAWV,eAAgBA,KAIlC,C,mMCxCKgB,EAAU,6BACVC,EAAU,mCAEHH,EAAgB,mCAAG,sGACPI,EAAAA,EAAAA,IAAA,kEACsCD,IAF/B,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mCACgBC,EADhB,iCACgDI,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,oBACoBN,EADpB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,4BAC4BN,EAD5B,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,6BAC6BN,EAD7B,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/SharedLayout/LoadingDots.jsx","components/SharedLayout/SharedLayout.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledSection = styled.section`\r\n  padding-right: 50px;\r\n  padding-left: 50px;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  padding-left: 5px;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: disc;\r\n  color: #0d57aa;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: 20px;\r\n  color: #0d57aa;\r\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: #1c85ff;\r\n    border-bottom: 2px solid #1c85ff;\r\n  }\r\n`;\r\n","import { LoadingDots, Dot } from './SharedLayout.styled'; // додаємо стилі\r\n\r\n// додаємо індикатор завантаження\r\nexport const LoadingIndicator = () => {\r\n  return (\r\n\r\n    // додаємо анімацію для індикатора завантаження\r\n    <LoadingDots>\r\n      <Dot delay=\"0s\" />\r\n      <Dot delay=\".2s\" />\r\n      <Dot delay=\".4s\" />\r\n    </LoadingDots>\r\n  );\r\n};\r\n\r\n// Діма Берестень\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const StyledHeader = styled.header`\r\n  padding: 20px 30px;\r\n  text-align: center;\r\n  box-shadow: 0px 4px 4px #d3d3d3;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n  display: inline-block;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  transition: color 0.2s ease-in-out;\r\n  color: #000000;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 40px;\r\n  }\r\n\r\n  &.active,\r\n  &:hover,\r\n  &:focus {\r\n    color: #1c85ff;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst bounce = keyframes`\r\n  0%, 80%, 100% {\r\n    transform: scale(0);\r\n  }\r\n  40% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const LoadingDots = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n  border-radius: 50%;\r\n  background-color: #1c85ff;\r\n  animation: ${bounce} 1s infinite ease-in-out;\r\n  animation-delay: ${({ delay }) => delay};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  StyledSection,\r\n  StyledLink,\r\n  SectionTitle,\r\n  List,\r\n  ListItem,\r\n} from './MovieList.styled'; // додаємо стилі\r\n\r\nconst MovieList = ({ trendingMovies }) => {\r\n  return (\r\n    <StyledSection>\r\n      <SectionTitle>Trending today</SectionTitle>\r\n\r\n      <List>\r\n        {trendingMovies.map(trendingMovie => (\r\n          <ListItem key={trendingMovie.id}>\r\n            <StyledLink to={`/movies/${trendingMovie.id}`}>\r\n              {trendingMovie.title}\r\n            </StyledLink>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n\r\nMovieList.propTypes = {\r\n  trendingMovies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      release_date: PropTypes.string.isRequired,\r\n      overview: PropTypes.string.isRequired,\r\n      poster_path: PropTypes.string,\r\n      vote_average: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\n// Діма Берестень\r\n","import { useEffect, useState } from 'react';\r\nimport { fetchTrendMovies } from '../services/api';\r\nimport MovieList from 'components/MovieList/MovieList'; // компонент для відображення списку фільмів\r\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots'; // індикатор завантаження\r\n\r\nconst Home = () => {\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  // додаємо запит на трендові фільми\r\n  useEffect(() => {\r\n    const fetchTrendingMovies = async () => {\r\n      try {\r\n        setError(false);\r\n        setIsLoading(true);\r\n        const { results } = await fetchTrendMovies();\r\n        setTrendingMovies(results); // записуємо в стейт\r\n      } catch (error) {\r\n        setError(true);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTrendingMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* додаємо перевірку на стан завантаження */}\r\n      {isLoading ? (\r\n        <LoadingIndicator />\r\n      ) : error ? (\r\n        <p>\r\n          Sorry, we could not fetch the trending movies. Please try again later.\r\n        </p>\r\n      ) : (\r\n        <MovieList trendingMovies={trendingMovies} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n// Діма Берестень\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://api.themoviedb.org';\r\nconst API_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca'; // персональний ключ\r\n\r\nexport const fetchTrendMovies = async () => {\r\n  const { data } = await axios.get(\r\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieByName = async query => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieById = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieCast = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieReviews = async movieId => {\r\n  const { data } = await axios.get(\r\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\n  return data;\r\n};\r\n"],"names":["StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","LoadingIndicator","delay","StyledHeader","StyledNavLink","NavLink","bounce","keyframes","LoadingDots","Dot","trendingMovies","map","trendingMovie","to","id","title","useState","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","baseURL","API_KEY","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}