{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yukina\\\\OneDrive\\\\Desktop\\\\git\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Reviews\\\\Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\n\nimport { fetchMovieReviews } from '../../services/api';\nimport { Author, NoReviewsText, Review, ReviewHeader, ReviewList, ReviewListItem, Wrapper } from './Reviews.styled'; // додаємо стилі\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reviews = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams(); // додаємо доступ до параметрів поточного URL\n\n  const [reviews, setReviews] = useState([]); // додаємо стейт для відгуків\n  // додаємо запит на відгуки\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const {\n          results\n        } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ReviewHeader, {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), reviews.length ? /*#__PURE__*/_jsxDEV(ReviewList, {\n      className: \"reviews-container\",\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(ReviewListItem, {\n        className: \"review-card\",\n        children: [/*#__PURE__*/_jsxDEV(Author, {\n          children: [\"Author: \", review.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Review, {\n          children: review.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NoReviewsText, {\n      children: \"We don't have any reviews for this movie yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reviews, \"tE9IYNGCem0GPPIw2fRHsfSTlmg=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\nexport default Reviews; // Діма Берестень\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/src/components/Reviews/Reviews.jsx"],"names":["useState","useEffect","useParams","fetchMovieReviews","Author","NoReviewsText","Review","ReviewHeader","ReviewList","ReviewListItem","Wrapper","Reviews","movieId","reviews","setReviews","fetchReviews","results","error","console","log","length","map","review","author","content","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAA8C;;AAC9C,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,YAJF,EAKEC,UALF,EAMEC,cANF,EAOEC,OAPF,QAQO,kBARP,C,CAQ2B;;;;AAE3B,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcV,SAAS,EAA7B,CADoB,CACa;;AACjC,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC,CAFoB,CAEwB;AAE5C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,YAAY,GAAG,YAAY;AAC/B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAc,MAAMb,iBAAiB,CAACS,OAAD,CAA3C;AACAE,QAAAA,UAAU,CAACE,OAAD,CAAV;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAPD;;AASAF,IAAAA,YAAY;AACb,GAXQ,EAWN,CAACH,OAAD,CAXM,CAAT;AAaA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGC,OAAO,CAACO,MAAR,gBACC,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA,gBACGP,OAAO,CAACQ,GAAR,CAAYC,MAAM,iBACjB,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,aAA1B;AAAA,gCACE,QAAC,MAAD;AAAA,iCAAiBA,MAAM,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,oBAASD,MAAM,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA6CF,MAAM,CAACG,EAApD;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADD,gBAUC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvCD;;GAAMd,O;UACgBT,S;;;KADhBS,O;AAwCN,eAAeA,OAAf,C,CAEA","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\r\nimport { fetchMovieReviews } from '../../services/api';\r\nimport {\r\n  Author,\r\n  NoReviewsText,\r\n  Review,\r\n  ReviewHeader,\r\n  ReviewList,\r\n  ReviewListItem,\r\n  Wrapper,\r\n} from './Reviews.styled'; // додаємо стилі\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams(); // додаємо доступ до параметрів поточного URL\r\n  const [reviews, setReviews] = useState([]); // додаємо стейт для відгуків\r\n\r\n  // додаємо запит на відгуки\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const { results } = await fetchMovieReviews(movieId);\r\n        setReviews(results);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ReviewHeader>Reviews</ReviewHeader>\r\n\r\n      {/* додаємо перевірку на наявність відгуків */}\r\n      {reviews.length ? (\r\n        <ReviewList className=\"reviews-container\">\r\n          {reviews.map(review => (\r\n            <ReviewListItem className=\"review-card\" key={review.id}>\r\n              <Author>Author: {review.author}</Author>\r\n              <Review>{review.content}</Review>\r\n            </ReviewListItem>\r\n          ))}\r\n        </ReviewList>\r\n      ) : (\r\n        <NoReviewsText>\r\n          We don't have any reviews for this movie yet.\r\n        </NoReviewsText>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Reviews;\r\n\r\n// Діма Берестень\r\n"]},"metadata":{},"sourceType":"module"}