{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Yukina\\\\OneDrive\\\\Desktop\\\\git\\\\goit-react-hw-05-movies\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState,useEffect}from'react';import{useParams}from'react-router-dom';// доступ до параметрів поточного URL\nimport{fetchMovieCast}from'../../services/api';// додаємо запит\nimport{CastHeader,CastInfo,CastList,CastListItem,CastName,NoCastText,Wrapper}from'./Cast.styled';// додаємо стилі\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cast=function Cast(){var _useParams=useParams(),movieId=_useParams.movieId;// додаємо параметр movieId\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),cast=_useState2[0],setCast=_useState2[1];useEffect(function(){var fetchCast=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$fetchMovieCast,_cast;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetchMovieCast(movieId);case 3:_yield$fetchMovieCast=_context.sent;_cast=_yield$fetchMovieCast.cast;setCast(_cast);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchCast(){return _ref.apply(this,arguments);};}();fetchCast();},[movieId]);return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(CastHeader,{children:\"Cast\"}),\" \",cast.length?/*#__PURE__*/_jsx(CastList,{children:cast.map(function(actor){return/*#__PURE__*/_jsxs(CastListItem,{className:\"cast-card\",children:[actor.profile_path?/*#__PURE__*/_jsx(\"img\",{src:\"https://image.tmdb.org/t/p/w200\".concat(actor.profile_path),alt:\"\".concat(actor.name,\" profile\")}):/*#__PURE__*/_jsx(\"img\",{src:\"https://via.placeholder.com/200x300?text=No+Image\",alt:\"\".concat(actor.name,\" profile\")}),/*#__PURE__*/_jsxs(CastInfo,{children:[/*#__PURE__*/_jsx(CastName,{children:actor.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Character: \",actor.character]})]})]},actor.id);})}):/*#__PURE__*/_jsx(NoCastText,{children:\"We don't have any information about the cast yet.\"})]});};export default Cast;// Діма Берестень","map":{"version":3,"sources":["C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"names":["useState","useEffect","useParams","fetchMovieCast","CastHeader","CastInfo","CastList","CastListItem","CastName","NoCastText","Wrapper","Cast","movieId","cast","setCast","fetchCast","console","log","length","map","actor","profile_path","name","character","id"],"mappings":"ocAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAA8C;AAC9C,OAASC,cAAT,KAA+B,oBAA/B,CAAqD;AACrD,OACEC,UADF,CAEEC,QAFF,CAGEC,QAHF,CAIEC,YAJF,CAKEC,QALF,CAMEC,UANF,CAOEC,OAPF,KAQO,eARP,CAQwB;wFAExB,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,eAAoBT,SAAS,EAA7B,CAAQU,OAAR,YAAQA,OAAR,CAAiC;AACjC,cAAwBZ,QAAQ,CAAC,EAAD,CAAhC,wCAAOa,IAAP,eAAaC,OAAb,eAEAb,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,SAAS,0FAAG,yMAESZ,CAAAA,cAAc,CAACS,OAAD,CAFvB,4CAENC,KAFM,uBAENA,IAFM,CAGdC,OAAO,CAACD,KAAD,CAAP,CAHc,+EAKdG,OAAO,CAACC,GAAR,cALc,oEAAH,kBAATF,CAAAA,SAAS,0CAAf,CASAA,SAAS,GACV,CAXQ,CAWN,CAACH,OAAD,CAXM,CAAT,CAaA,mBACE,MAAC,OAAD,yBACE,KAAC,UAAD,mBADF,KAIGC,IAAI,CAACK,MAAL,cACC,KAAC,QAAD,WACGL,IAAI,CAACM,GAAL,CAAS,SAAAC,KAAK,qBACb,MAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,WAGGA,KAAK,CAACC,YAAN,cACC,YACE,GAAG,0CAAoCD,KAAK,CAACC,YAA1C,CADL,CAEE,GAAG,WAAKD,KAAK,CAACE,IAAX,YAFL,EADD,cAMC,YACE,GAAG,oDADL,CAEE,GAAG,WAAKF,KAAK,CAACE,IAAX,YAFL,EATJ,cAgBE,MAAC,QAAD,yBACE,KAAC,QAAD,WAAWF,KAAK,CAACE,IAAjB,EADF,cAEE,mCAAeF,KAAK,CAACG,SAArB,GAFF,GAhBF,GAAyCH,KAAK,CAACI,EAA/C,CADa,EAAd,CADH,EADD,cA2BC,KAAC,UAAD,gEA/BJ,GADF,CAsCD,CAvDD,CAyDA,cAAeb,CAAAA,IAAf,CAEA","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\r\nimport { fetchMovieCast } from '../../services/api'; // додаємо запит\r\nimport {\r\n  CastHeader,\r\n  CastInfo,\r\n  CastList,\r\n  CastListItem,\r\n  CastName,\r\n  NoCastText,\r\n  Wrapper,\r\n} from './Cast.styled'; // додаємо стилі\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams(); // додаємо параметр movieId\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCast = async () => {\r\n      try {\r\n        const { cast } = await fetchMovieCast(movieId);\r\n        setCast(cast);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchCast();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CastHeader>Cast</CastHeader> {/* додаємо заголовок */}\r\n\r\n      {/* додаємо перевірку на наявність акторів */}\r\n      {cast.length ? (\r\n        <CastList>\r\n          {cast.map(actor => (\r\n            <CastListItem className=\"cast-card\" key={actor.id}>\r\n\r\n              {/* додаємо перевірку на наявність фото */}\r\n              {actor.profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\r\n                  alt={`${actor.name} profile`}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\r\n                  alt={`${actor.name} profile`}\r\n                />\r\n              )}\r\n\r\n              {/* додаємо інформацію про актора */}\r\n              <CastInfo>\r\n                <CastName>{actor.name}</CastName>\r\n                <p>Character: {actor.character}</p>\r\n              </CastInfo>\r\n            </CastListItem>\r\n          ))}\r\n        </CastList>\r\n      ) : (\r\n        <NoCastText>\r\n          We don't have any information about the cast yet.\r\n        </NoCastText>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n\r\n// Діма Берестень\r\n"]},"metadata":{},"sourceType":"module"}