{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yukina\\\\OneDrive\\\\Desktop\\\\git\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Cast\\\\Cast.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\n\nimport { fetchMovieCast } from '../../services/api'; // додаємо запит\n\nimport { CastHeader, CastInfo, CastList, CastListItem, CastName, NoCastText, Wrapper } from './Cast.styled'; // додаємо стилі\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cast = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams(); // додаємо параметр movieId\n\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const {\n          cast\n        } = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CastHeader, {\n      children: \"Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \" \", cast.length ? /*#__PURE__*/_jsxDEV(CastList, {\n      children: cast.map(actor => /*#__PURE__*/_jsxDEV(CastListItem, {\n        className: \"cast-card\",\n        children: [actor.profile_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${actor.profile_path}`,\n          alt: `${actor.name} profile`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://via.placeholder.com/200x300?text=No+Image`,\n          alt: `${actor.name} profile`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CastInfo, {\n          children: [/*#__PURE__*/_jsxDEV(CastName, {\n            children: actor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Character: \", actor.character]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NoCastText, {\n      children: \"We don't have any information about the cast yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cast, \"RECX0ZkPp833Bw9L7PJRS5R3l1k=\", false, function () {\n  return [useParams];\n});\n\n_c = Cast;\nexport default Cast; // Діма Берестень\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"names":["useState","useEffect","useParams","fetchMovieCast","CastHeader","CastInfo","CastList","CastListItem","CastName","NoCastText","Wrapper","Cast","movieId","cast","setCast","fetchCast","error","console","log","length","map","actor","profile_path","name","character","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAA8C;;AAC9C,SAASC,cAAT,QAA+B,oBAA/B,C,CAAqD;;AACrD,SACEC,UADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,QALF,EAMEC,UANF,EAOEC,OAPF,QAQO,eARP,C,CAQwB;;;;AAExB,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcV,SAAS,EAA7B,CADiB,CACgB;;AACjC,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAM;AAAEF,UAAAA;AAAF,YAAW,MAAMV,cAAc,CAACS,OAAD,CAArC;AACAE,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAPD;;AASAD,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACH,OAAD,CAXM,CAAT;AAaA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,OAIGC,IAAI,CAACM,MAAL,gBACC,QAAC,QAAD;AAAA,gBACGN,IAAI,CAACO,GAAL,CAASC,KAAK,iBACb,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC,WAAxB;AAAA,mBAGGA,KAAK,CAACC,YAAN,gBACC;AACE,UAAA,GAAG,EAAG,kCAAiCD,KAAK,CAACC,YAAa,EAD5D;AAEE,UAAA,GAAG,EAAG,GAAED,KAAK,CAACE,IAAK;AAFrB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAMC;AACE,UAAA,GAAG,EAAG,mDADR;AAEE,UAAA,GAAG,EAAG,GAAEF,KAAK,CAACE,IAAK;AAFrB;AAAA;AAAA;AAAA;AAAA,gBATJ,eAgBE,QAAC,QAAD;AAAA,kCACE,QAAC,QAAD;AAAA,sBAAWF,KAAK,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAeF,KAAK,CAACG,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA,SAAyCH,KAAK,CAACI,EAA/C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADD,gBA2BC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAvDD;;GAAMd,I;UACgBT,S;;;KADhBS,I;AAyDN,eAAeA,IAAf,C,CAEA","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\r\nimport { fetchMovieCast } from '../../services/api'; // додаємо запит\r\nimport {\r\n  CastHeader,\r\n  CastInfo,\r\n  CastList,\r\n  CastListItem,\r\n  CastName,\r\n  NoCastText,\r\n  Wrapper,\r\n} from './Cast.styled'; // додаємо стилі\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams(); // додаємо параметр movieId\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCast = async () => {\r\n      try {\r\n        const { cast } = await fetchMovieCast(movieId);\r\n        setCast(cast);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchCast();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CastHeader>Cast</CastHeader> {/* додаємо заголовок */}\r\n\r\n      {/* додаємо перевірку на наявність акторів */}\r\n      {cast.length ? (\r\n        <CastList>\r\n          {cast.map(actor => (\r\n            <CastListItem className=\"cast-card\" key={actor.id}>\r\n\r\n              {/* додаємо перевірку на наявність фото */}\r\n              {actor.profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\r\n                  alt={`${actor.name} profile`}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\r\n                  alt={`${actor.name} profile`}\r\n                />\r\n              )}\r\n\r\n              {/* додаємо інформацію про актора */}\r\n              <CastInfo>\r\n                <CastName>{actor.name}</CastName>\r\n                <p>Character: {actor.character}</p>\r\n              </CastInfo>\r\n            </CastListItem>\r\n          ))}\r\n        </CastList>\r\n      ) : (\r\n        <NoCastText>\r\n          We don't have any information about the cast yet.\r\n        </NoCastText>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n\r\n// Діма Берестень\r\n"]},"metadata":{},"sourceType":"module"}