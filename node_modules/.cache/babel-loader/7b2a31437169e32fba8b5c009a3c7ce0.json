{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Yukina\\\\OneDrive\\\\Desktop\\\\git\\\\goit-react-hw-05-movies\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import{useSearchParams,useLocation}from'react-router-dom';// додаємо хук для роботи з параметрами URL\nimport{toast}from'react-hot-toast';// імпортуємо плагін для сповіщень\nimport{fetchMovieByName}from'../services/api';import SearchMovies from'../components/SearchMovies/SearchMovies';import{List,ListItem,SectionTitle,StyledLink,StyledSection}from'../components/MovieList/MovieList.styled';// імпортуємо стилі\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Movies=function Movies(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,2),searchParams=_useSearchParams2[0],setSearchParams=_useSearchParams2[1];var location=useLocation();// додаємо запит на фільм\nuseEffect(function(){var _searchParams$get;var query=(_searchParams$get=searchParams.get('query'))!==null&&_searchParams$get!==void 0?_searchParams$get:'';// щоб не було помилки, якщо query не буде в URL\nif(!query)return;// додаємо сповіщення про пошук\nvar getMovie=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$fetchMovieByNa,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetchMovieByName(query);case 3:_yield$fetchMovieByNa=_context.sent;results=_yield$fetchMovieByNa.results;// додаємо сповіщення, якщо фільмів не знайдено\nif(results.length===0){toast.dismiss();// очищаємо попереднє сповіщення\ntoast.error('No movies found');setMovies([]);// очищаємо масив фільмів\n}else{setMovies(results);// записуємо масив фільмів\n}_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);toast.error(_context.t0.message);setMovies([]);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function getMovie(){return _ref.apply(this,arguments);};}();// додаємо запит на фільм\ngetMovie();},[searchParams]);// додаємо функцію для пошуку фільму\nvar handleSubmit=function handleSubmit(query){setSearchParams({query:query});// записуємо query в URL\n};return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(StyledSection,{children:[/*#__PURE__*/_jsx(SectionTitle,{children:\"Movies Page\"}),/*#__PURE__*/_jsx(SearchMovies,{onSubmit:handleSubmit}),\" \",/*#__PURE__*/_jsx(List,{children:movies.map(function(movie){return/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(StyledLink,{to:\"/movies/\".concat(movie.id),state:{from:location},children:movie.title})},movie.id);})})]})});};export default Movies;// Діма Берестень","map":{"version":3,"sources":["C:/Users/Yukina/OneDrive/Desktop/git/goit-react-hw-05-movies/src/pages/Movies.jsx"],"names":["React","useState","useEffect","useSearchParams","useLocation","toast","fetchMovieByName","SearchMovies","List","ListItem","SectionTitle","StyledLink","StyledSection","Movies","movies","setMovies","searchParams","setSearchParams","location","query","get","getMovie","results","length","dismiss","error","message","handleSubmit","map","movie","id","from","title"],"mappings":"ocAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,eAAT,CAA0BC,WAA1B,KAA6C,kBAA7C,CAAiE;AACjE,OAASC,KAAT,KAAsB,iBAAtB,CAAyC;AACzC,OAASC,gBAAT,KAAiC,iBAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,yCAAzB,CACA,OACEC,IADF,CAEEC,QAFF,CAGEC,YAHF,CAIEC,UAJF,CAKEC,aALF,KAMO,0CANP,CAMmD;wFAEnD,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,cAA4BZ,QAAQ,CAAC,EAAD,CAApC,wCAAOa,MAAP,eAAeC,SAAf,eACA,qBAAwCZ,eAAe,EAAvD,sDAAOa,YAAP,sBAAqBC,eAArB,sBACA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA;AACAF,SAAS,CAAC,UAAM,uBACd,GAAMiB,CAAAA,KAAK,oBAAGH,YAAY,CAACI,GAAb,CAAiB,OAAjB,CAAH,uDAAgC,EAA3C,CAA+C;AAC/C,GAAI,CAACD,KAAL,CAAY,OAEZ;AACA,GAAME,CAAAA,QAAQ,0FAAG,2MAEaf,CAAAA,gBAAgB,CAACa,KAAD,CAF7B,4CAELG,OAFK,uBAELA,OAFK,CAIb;AACA,GAAIA,OAAO,CAACC,MAAR,GAAmB,CAAvB,CAA0B,CACxBlB,KAAK,CAACmB,OAAN,GAAiB;AACjBnB,KAAK,CAACoB,KAAN,CAAY,iBAAZ,EACAV,SAAS,CAAC,EAAD,CAAT,CAAe;AAChB,CAJD,IAIO,CACLA,SAAS,CAACO,OAAD,CAAT,CAAoB;AACrB,CAXY,+EAabjB,KAAK,CAACoB,KAAN,CAAY,YAAMC,OAAlB,EACAX,SAAS,CAAC,EAAD,CAAT,CAda,oEAAH,kBAARM,CAAAA,QAAQ,0CAAd,CAkBA;AACEA,QAAQ,GACX,CAzBQ,CAyBN,CAACL,YAAD,CAzBM,CAAT,CA2BA;AACA,GAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAR,KAAK,CAAI,CAC5BF,eAAe,CAAC,CAAEE,KAAK,CAALA,KAAF,CAAD,CAAf,CAA4B;AAC7B,CAFD,CAIA,mBACE,mCACE,MAAC,aAAD,yBACE,KAAC,YAAD,0BADF,cAGE,KAAC,YAAD,EAAc,QAAQ,CAAEQ,YAAxB,EAHF,kBAKE,KAAC,IAAD,WACGb,MAAM,CAACc,GAAP,CAAW,SAAAC,KAAK,qBACf,KAAC,QAAD,wBAGE,KAAC,UAAD,EAAY,EAAE,mBAAaA,KAAK,CAACC,EAAnB,CAAd,CAAuC,KAAK,CAAE,CAAEC,IAAI,CAAEb,QAAR,CAA9C,UACGW,KAAK,CAACG,KADT,EAHF,EAAeH,KAAK,CAACC,EAArB,CADe,EAAhB,CADH,EALF,GADF,EADF,CAqBD,CA3DD,CA6DA,cAAejB,CAAAA,MAAf,CAEA","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, useLocation } from 'react-router-dom'; // додаємо хук для роботи з параметрами URL\r\nimport { toast } from 'react-hot-toast'; // імпортуємо плагін для сповіщень\r\nimport { fetchMovieByName } from '../services/api';\r\nimport SearchMovies from '../components/SearchMovies/SearchMovies';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  SectionTitle,\r\n  StyledLink,\r\n  StyledSection,\r\n} from '../components/MovieList/MovieList.styled'; // імпортуємо стилі\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const location = useLocation();\r\n\r\n  // додаємо запит на фільм\r\n  useEffect(() => {\r\n    const query = searchParams.get('query') ?? ''; // щоб не було помилки, якщо query не буде в URL\r\n    if (!query) return;\r\n\r\n    // додаємо сповіщення про пошук\r\n    const getMovie = async () => {\r\n      try {\r\n        const { results } = await fetchMovieByName(query);\r\n\r\n        // додаємо сповіщення, якщо фільмів не знайдено\r\n        if (results.length === 0) {\r\n          toast.dismiss(); // очищаємо попереднє сповіщення\r\n          toast.error('No movies found');\r\n          setMovies([]); // очищаємо масив фільмів\r\n        } else {\r\n          setMovies(results); // записуємо масив фільмів\r\n        }\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n        setMovies([]);\r\n      }\r\n    };\r\n\r\n    // додаємо запит на фільм\r\n      getMovie();\r\n  }, [searchParams]);\r\n\r\n  // додаємо функцію для пошуку фільму\r\n  const handleSubmit = query => {\r\n    setSearchParams({ query }); // записуємо query в URL\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <StyledSection>\r\n        <SectionTitle>Movies Page</SectionTitle>\r\n\r\n        <SearchMovies onSubmit={handleSubmit} /> {/* додаємо компонент для пошуку фільму */}\r\n\r\n        <List>\r\n          {movies.map(movie => (\r\n            <ListItem key={movie.id}>\r\n\r\n              {/* додаємо посилання на сторінку фільму */}\r\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\r\n                {movie.title}\r\n              </StyledLink>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </StyledSection>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n\r\n// Діма Берестень\r\n"]},"metadata":{},"sourceType":"module"}